{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.navigate('Home');\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Registered in with: ', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Logged in with: ', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    keyboardVerticalOffset: -500,\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(Text, {\n        children: \"Restaurant Locator App\"\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonOutlineText,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: [styles.button, styles.buttonOutline],\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#0782F9',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#0782F9',\n    borderWidth: 2\n  },\n  buttonOutlineText: {\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonText: {\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["useNavigation","React","useEffect","useState","auth","LoginScreen","email","setEmail","password","setPassword","navigation","unsubscribe","onAuthStateChanged","user","navigate","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","handleLogin","signInWithEmailAndPassword","styles","container","inputContainer","text","input","buttonContainer","button","buttonOutlineText","buttonOutline","buttonText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","fontWeight","fontSize"],"sources":["/Users/malavpatel/Documents/GA_Tech/CS_4261/Restaurant-Locator-App/screens/LoginScreen.js"],"sourcesContent":["\nimport {useNavigation} from '@react-navigation/core'\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport React, { useEffect, useState } from 'react'\nimport { auth } from '../firebase'\n\nconst LoginScreen = () => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const navigation = useNavigation()\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if (user) {\n                navigation.navigate('Home')\n            }\n        })\n        return unsubscribe\n    }, [])\n\n    const handleSignUp = () => {\n        auth\n            .createUserWithEmailAndPassword(email, password)\n            .then(userCredentials => {\n                const user = userCredentials.user;\n                console.log('Registered in with: ', user.email)\n            })\n            .catch(error => alert(error.message))\n    }\n\n    const handleLogin = () => {\n        auth\n            .signInWithEmailAndPassword(email, password)\n            .then(userCredentials => {\n                const user = userCredentials.user;\n                console.log('Logged in with: ', user.email)\n            })\n            .catch(error => alert(error.message))\n    }\n\n\n  return (\n    <KeyboardAvoidingView\n        keyboardVerticalOffset = {-500}\n        style = {styles.container}\n        behavior = 'padding'\n    >\n        <View style = {styles.inputContainer}>\n            <Text>Restaurant Locator App</Text>\n        </View>\n\n        <View style = {styles.inputContainer}>\n            <TextInput \n                placeholder = \"Email\"\n                value = {email}\n                onChangeText = {text => setEmail(text)}\n                style = {styles.input}\n            />\n\n            <TextInput \n                placeholder = \"Password\"\n                value = {password}\n                onChangeText = {text => setPassword(text)}\n                style = {styles.input}\n                secureTextEntry\n            />\n        </View>\n\n        <View style = {styles.buttonContainer}>\n            \n            <TouchableOpacity\n                onPress = {handleLogin}\n                style = {styles.button}>\n                    <Text style = {styles.buttonOutlineText}>\n                        Login\n                    </Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity\n                onPress = {handleSignUp}\n                style = {[styles.button, styles.buttonOutline]}>\n                    <Text style = {styles.buttonText}>\n                        Register\n                    </Text>\n            </TouchableOpacity>\n\n        </View>\n\n\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default LoginScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1, \n        justifyContent: 'center', \n        alignItems: 'center', \n    },\n    inputContainer: {\n        width: '80%'\n    }, \n    input: {\n        backgroundColor: 'white', \n        paddingHorizontal: 15,\n        paddingVertical: 10, \n        borderRadius: 10, \n        marginTop: 5,\n    }, \n    buttonContainer: {\n        width: '60%',\n        justifyContent: 'center', \n        alignItems: 'center', \n        marginTop: 40,\n    },\n    button: {\n        backgroundColor: '#0782F9',\n        width: '100%', \n        padding: 15, \n        borderRadius: 10,\n        alignItems: 'center',\n    },\n    buttonOutline: {\n        backgroundColor: 'white', \n        marginTop: 5, \n        borderColor: '#0782F9', \n        borderWidth: 2, \n    },\n    buttonOutlineText: {\n        fontWeight: '700',\n        fontSize: 16, \n    }, \n     buttonText: { \n        fontWeight: '700',\n        fontSize: 16, \n    }, \n\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}