{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect, useState } from 'react';\nimport GlobalStyles from \"./GlobalStyles\";\nimport SearchBar from \"./components/search/SearchBar\";\nimport Categories from \"./components/search/Categories\";\nimport RestaurantItems, { localRestaurants } from \"./components/search/RestaurantItems\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar YELP_API_KEY = \"uPz0TBHmjk53HRzUWfnHo-XhCFTgDnB59YZCt9Zyh2MhT8MR7_3zjR_Fvoz-Zuk26I82Kp8K5Nz4WmeGUEnm7x3eCuQaedWtN8NU-DlmoPeIruGL1Wh3OqulKRsaY3Yx\";\nexport default function Home() {\n  var _useState = useState(localRestaurants),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurantData = _useState2[0],\n      setRestaurantData = _useState2[1];\n\n  var _useState3 = useState('Atlanta'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      city = _useState4[0],\n      setCity = _useState4[1];\n\n  var getRestaurantsFromYelp = function getRestaurantsFromYelp() {\n    var yelpUrl = \"https://api.yelp.com/v3/businesses/search?term=restaurants&location=\" + city + \"}\";\n    var apiOptions = {\n      headers: {\n        Authorization: \"Bearer \" + YELP_API_KEY\n      }\n    };\n    return fetch(yelpUrl, apiOptions).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return setRestaurantData(json.businesses);\n    });\n  };\n\n  useEffect(function () {\n    getRestaurantsFromYelp();\n  }, [city]);\n  return _jsxs(SafeAreaView, {\n    style: GlobalStyles.droidSafeArea,\n    children: [_jsx(View, {\n      style: {\n        backgroundColor: 'white',\n        padding: 15\n      },\n      children: _jsx(SearchBar, {\n        cityHandler: setCity\n      })\n    }), _jsxs(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: [_jsx(Categories, {}), _jsx(RestaurantItems, {\n        restaurantData: restaurantData\n      })]\n    })]\n  });\n}\n;","map":{"version":3,"names":["React","useEffect","useState","GlobalStyles","SearchBar","Categories","RestaurantItems","localRestaurants","YELP_API_KEY","Home","restaurantData","setRestaurantData","city","setCity","getRestaurantsFromYelp","yelpUrl","apiOptions","headers","Authorization","fetch","then","res","json","businesses","droidSafeArea","backgroundColor","padding"],"sources":["/Users/malavpatel/Documents/GA_Tech/CS_4261/Restaurant-Locator-App/Home.js"],"sourcesContent":["import {View, SafeAreaView, ScrollView} from 'react-native'\nimport React, { useEffect, useState } from 'react'\nimport GlobalStyles from './GlobalStyles';\nimport SearchBar from './components/search/SearchBar';\nimport Categories from './components/search/Categories';\nimport RestaurantItems, {localRestaurants} from './components/search/RestaurantItems';\n\nconst YELP_API_KEY = \"uPz0TBHmjk53HRzUWfnHo-XhCFTgDnB59YZCt9Zyh2MhT8MR7_3zjR_Fvoz-Zuk26I82Kp8K5Nz4WmeGUEnm7x3eCuQaedWtN8NU-DlmoPeIruGL1Wh3OqulKRsaY3Yx\"\n\nexport default function Home() {\n\n  const [restaurantData, setRestaurantData] = useState(localRestaurants)\n  const[city, setCity] = useState('Atlanta'); \n\n  const getRestaurantsFromYelp = () => {\n    \n    const yelpUrl = `https://api.yelp.com/v3/businesses/search?term=restaurants&location=${city}}`;\n\n    const apiOptions = {\n      headers: {\n        Authorization: `Bearer ${YELP_API_KEY}`\n      },\n    };\n\n    return fetch(yelpUrl, apiOptions).then((res) => res.json()).then(json => setRestaurantData(json.businesses))\n  }; \n\n  useEffect(() => {\n    getRestaurantsFromYelp(); \n  }, [city])\n\n  \n  return (\n    <SafeAreaView style={GlobalStyles.droidSafeArea}>\n        <View style = {{backgroundColor: 'white', padding: 15}}>\n            \n            <SearchBar cityHandler={setCity}/>\n        </View>\n        \n        <ScrollView showsVerticalScrollIndicator = {false}> \n          <Categories />\n          <RestaurantItems restaurantData = {restaurantData}/>\n        </ScrollView>\n    </SafeAreaView>\n  )\n};\n"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,eAAP,IAAyBC,gBAAzB;;;AAEA,IAAMC,YAAY,GAAG,kIAArB;AAEA,eAAe,SAASC,IAAT,GAAgB;EAE7B,gBAA4CP,QAAQ,CAACK,gBAAD,CAApD;EAAA;EAAA,IAAOG,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,iBAAuBT,QAAQ,CAAC,SAAD,CAA/B;EAAA;EAAA,IAAMU,IAAN;EAAA,IAAYC,OAAZ;;EAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;IAEnC,IAAMC,OAAO,4EAA0EH,IAA1E,MAAb;IAEA,IAAMI,UAAU,GAAG;MACjBC,OAAO,EAAE;QACPC,aAAa,cAAYV;MADlB;IADQ,CAAnB;IAMA,OAAOW,KAAK,CAACJ,OAAD,EAAUC,UAAV,CAAL,CAA2BI,IAA3B,CAAgC,UAACC,GAAD;MAAA,OAASA,GAAG,CAACC,IAAJ,EAAT;IAAA,CAAhC,EAAqDF,IAArD,CAA0D,UAAAE,IAAI;MAAA,OAAIX,iBAAiB,CAACW,IAAI,CAACC,UAAN,CAArB;IAAA,CAA9D,CAAP;EACD,CAXD;;EAaAtB,SAAS,CAAC,YAAM;IACda,sBAAsB;EACvB,CAFQ,EAEN,CAACF,IAAD,CAFM,CAAT;EAKA,OACE,MAAC,YAAD;IAAc,KAAK,EAAET,YAAY,CAACqB,aAAlC;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAI;QAACC,eAAe,EAAE,OAAlB;QAA2BC,OAAO,EAAE;MAApC,CAAf;MAAA,UAEI,KAAC,SAAD;QAAW,WAAW,EAAEb;MAAxB;IAFJ,EADJ,EAMI,MAAC,UAAD;MAAY,4BAA4B,EAAI,KAA5C;MAAA,WACE,KAAC,UAAD,KADF,EAEE,KAAC,eAAD;QAAiB,cAAc,EAAIH;MAAnC,EAFF;IAAA,EANJ;EAAA,EADF;AAaD;AAAA"},"metadata":{},"sourceType":"module"}